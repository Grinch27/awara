name: Build APK

# on:
#   push:
#     branches: [main, develop]
#   pull_request:
#     branches: [main]

# run-name: Build APK

on:
  # schedule:
  #   # Run every day at 20:00 UTC
  #   - cron: "0 20 * * *"
  push:
    branches: [main]
  pull_request:
    branches: [main]
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [debug, release]

    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Setup JDK
        uses: actions/setup-java@main
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@main
        with:
          gradle-version: "current"
          cache-cleanup: on-success

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@main

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Update gradle/wrapper/gradle-wrapper.properties
        id: update
        env:
          VERSION: ${{ '8' }}
        run: |
          # 方法1: 使用 jq 解析 JSON (推荐)
          if command -v jq &> /dev/null; then
            GRADLE_VERSION=$(curl -s https://services.gradle.org/versions/${{ env.VERSION }} | jq -r '.[0].version')
          # 方法2: 使用 grep 和 sed 解析
          else
            GRADLE_VERSION=$(curl -s https://services.gradle.org/versions/${{ env.VERSION }} | grep -o '"version" : "[^"]*"' | head -1 | sed 's/.*"\([^"]*\)".*/\1/')
          fi
          echo "Gradle ${{ env.VERSION }}.x 系列最新版本: $GRADLE_VERSION"

          # 显示当前版本
          echo "当前 gradle-wrapper.properties 内容:"
          cat gradle/wrapper/gradle-wrapper.properties

          # 使用 sed 动态替换版本号
          sed -i "s|gradle-[0-9]\+\.[0-9]\+.*-bin\.zip|gradle-${GRADLE_VERSION}-bin.zip|g" gradle/wrapper/gradle-wrapper.properties
          echo "已更新 Gradle Wrapper 到版本: $GRADLE_VERSION"

          # 验证更新后的配置文件
          echo "更新后的 gradle-wrapper.properties 内容:"
          cat gradle/wrapper/gradle-wrapper.properties

      - name: Build APK
        run: |
          ./gradlew assemble${{ matrix.build_type == 'debug' && 'Debug' || 'Release' }} --no-daemon --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@main
        with:
          name: app-${{ matrix.build_type }}
          path: app/build/outputs/apk/${{ matrix.build_type }}/*.apk
          compression-level: 9 # maximum compression
          retention-days: 1
